<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:task="http://www.springframework.org/schema/task"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                           http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-4.0.xsd
                           http://www.springframework.org/schema/aop
						   http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
						   http://www.springframework.org/schema/tx
						   http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
						   http://www.springframework.org/schema/task
						   http://www.springframework.org/schema/task/spring-task-4.0.xsd">

	<!-- 自动扫描 -->
	<context:component-scan base-package="*" />
	<!-- 引入配置文件 -->
	<bean id="propertyConfigurer"
		  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties" />
	</bean>

	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
	</bean>

	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" >
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:/mybatis/myBatis-config.xml"/>
		<!-- mapper扫描 -->
		<property name="mapperLocations" value="classpath:mybatis/**/*Mapper*.xml" ></property>
	</bean>

	<!-- 配置SessionTemplate，已封装了繁琐的数据操作-->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>


	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" >
		<property name="basePackage" value="ssm.dao" ></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" ></property>
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="txManager-base" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" ></property>
	</bean>
	<tx:advice id="txAdvice" transaction-manager="txManager-base">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="insert*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="select*" read-only="true"/>
			<tx:method name="find*" read-only="true"/>
		</tx:attributes>
	</tx:advice>

	<!-- 事物处理 -->
	<aop:config>
		<aop:pointcut id="pc" expression="execution(* ssm.service..*(..))" />
		<aop:advisor pointcut-ref="pc" advice-ref="txAdvice" />
	</aop:config>

	<!-- Beetl -->

	<bean id="beetlConfig" class="ssm.common.MyBeetlGroupUtilConfiguration"
		  init-method="init"/>

	<bean id="viewResolver" class="org.beetl.ext.spring.BeetlSpringViewResolver">
		<property name="contentType" value="text/html;charset=UTF-8"/>
	</bean>



	<!-- shiro start-->
	<!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="ShiroRealm" />
	</bean>

	<!-- 項目自定义的Realm -->
	<bean id="ShiroRealm" class="ssm.common.MyShiroRealm" ></bean>


	<!-- Shiro Filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />

		<property name="loginUrl" value="/login" />

		<property name="unauthorizedUrl" value="/login" />

		<property name="filterChainDefinitions">
			<value>
				/login 								= anon
				/toLogin							= anon
				/static/**							= anon
				/**  								= authc
			</value>
		</property>
	</bean>
	<!-- shiro end -->

	<!-- 配置simpleExceptionResolver -->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<!--<property name="exceptionMappings">
			 此处配置异常跳转页面
			<entry key="ResourceNotFoundException" value="common/error/resourceNotFoundError" />
		</property>-->
		<property name="statusCodes">
			<!-- 此处配置状态码跳转页面 -->
			<map>
				<entry key="/static/errorPage/error404.html" value="404" />
				<entry key="/static/errorPage/error500.html" value="500" />
			</map>
		</property>
	</bean>

</beans>